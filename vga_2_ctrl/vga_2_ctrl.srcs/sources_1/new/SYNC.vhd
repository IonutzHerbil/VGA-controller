library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use work.my.all;

entity SYNC is

PORT(
CLK:IN std_logic;
HSYNC,VSYNC:OUT std_logic;
R,G,B: OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
UP,DOWN,LEFT,RIGHT:IN std_logic;
RESTART :IN std_logic;
RSEL,GSEL,BSEL: IN std_logic;
SH_SEL: IN STD_LOGIC_VECTOR (2 DOWNTO 0);
SPEED:IN STD_LOGIC
);

end SYNC;

architecture Behavioral of SYNC is

--PIXEL COORDINATES
SIGNAL HPOS: INTEGER RANGE 0 to 799:=0;
SIGNAL VPOS:INTEGER RANGE 0 TO 520:=0;

SIGNAL VELOCITY:INTEGER;

--SHAPE CENTER COORDINATES
SIGNAL Xcenter: INTEGER RANGE 0 TO 799:=480;
SIGNAL Ycenter: INTEGER RANGE 0 TO 520:=281;

signal DRAW:std_logic;
signal DRAW_SEL_TRI,DRAW_SEL_SQ,DRAW_SEL_CIRC,DRAW_SEL_SMILEY,DRAW_SEL_ROMB,DRAW_SEL_OCTOGON,DRAW_SEL_DOUGH,DRAW_SEL_STAR: STD_LOGIC;
begin

--PROCEDURES   
TRIANGLE(Xcur=>HPOS,Ycur=>VPOS,Xpos=>Xcenter,Ypos=>Ycenter,DRAW_TRI=>DRAW_SEL_TRI);
SQ(Xcur=>HPOS,Ycur=>VPOS,Xpos=>Xcenter,Ypos=>Ycenter,DRAW_SQ=>DRAW_SEL_SQ);
CIRCLE(Xcur=>HPOS,Ycur=>VPOS,Xpos=>Xcenter,Ypos=>Ycenter,DRAW_CIRC=>DRAW_SEL_CIRC);
SMILEY(Xcur=>HPOS,Ycur=>VPOS,Xpos=>Xcenter,Ypos=>Ycenter,DRAW_SMILEY=>DRAW_SEL_SMILEY);
ROMB(Xcur=>HPOS,Ycur=>VPOS,Xpos=>Xcenter,Ypos=>Ycenter,DRAW_ROMB=>DRAW_SEL_ROMB);
OCTOGON(Xcur=>HPOS,Ycur=>VPOS,Xpos=>Xcenter,Ypos=>Ycenter,DRAW_OCTOGON=>DRAW_SEL_OCTOGON);
DOUGHNUT(Xcur=>HPOS,Ycur=>VPOS,Xpos=>Xcenter,Ypos=>Ycenter,DRAW_DOUGH=>DRAW_SEL_DOUGH);
STAR(Xcur=>HPOS,Ycur=>VPOS,Xpos=>Xcenter,Ypos=>Ycenter,DRAW_STAR=>DRAW_SEL_STAR);


PROCESS(CLK)
BEGIN


--SPEED MUX: THE USER CAN CHOOSE BETWEEN 2 SPEEDS
CASE SPEED iS 
    WHEN '0'=>VELOCITY<=1;
    WHEN '1'=>VELOCITY<=5;
END CASE;

--SHAPE MUX: THE SIGNAL THAT DECIDES WHETHER A PIXEL IS INSIDE THE SHAPE OR NOT IS CHOSEN
-- BASED ON THE SHAPE SELECTED BY THE USER (FROM ALL THE SIGNALS THAT DESCRIBE A PARTICULAR SHAPE)
CASE SH_SEL is
    WHEN "000"=>DRAW<=DRAW_SEL_TRI;
    WHEN "001"=>DRAW<=DRAW_SEL_SQ;
    WHEN "010"=> DRAW<=DRAW_SEL_CIRC;
    WHEN "011"=> DRAW<=DRAW_SEL_STAR;
    WHEN "100"=> DRAW<=DRAW_SEL_OCTOGON;
    WHEN "101"=> DRAW<=DRAW_SEL_DOUGH;
    WHEN "110"=> DRAW<=DRAW_SEL_ROMB;
    WHEN OTHERS => DRAW<=DRAW_SEL_SMILEY;
    END CASE;



IF CLK'EVENT AND CLK='1' THEN

--COLOR MUX: THE PIXEL EITHER TAKES THE COLOR OF THE SHAPE OR THE COLOR OF THE BACKGROUND
    IF DRAW='1' THEN
        R<=(OTHERS =>RSEL);
        G<=(OTHERS=>GSEL);
        B<=(OTHERS=>BSEL);
    ELSE
        R<=( OTHERS=>'0');
        G<=( OTHERS=>'0');
        B<=( OTHERS=>'0');
    END IF;

--COORDINATES CALCULATORS
    --HORIZONTAL COORDINATE OF EACH PIXEL IS CALCULATED
    IF HPOS<799 THEN
        HPOS<=HPOS+1;
    ELSE
        HPOS<=0;
        --WHEN A FULL LINE HAS BEEN GENERATED, THE VERTICAL COORDINATE IS INCREASED WHILE THE HORIZONATL BECOMES 0
        IF VPOS<520 THEN
           VPOS<=VPOS+1;
        ELSE
        -- WHEN A FULL FRAME HAS BEEN RENDERED THE VERTICAL COORDINATES BECOMES 0
           VPOS<=0;
           -- ALSO THE SHAPE IS GENERATED AGAIN BASED ON THE USER INPUTS
           IF RESTART='1' THEN
           -- IF THE RESTART BUTTON HAS BEN PUSHED,THE SHAPE IS MOVED TO THE CENTER OF THE SCREEN
                XCENTER<=480;
                YCENTER<=281;
           ELSE     
                   --THE SHAPE CENTER COORDINATES ARE MODIFIED BASED ON THE USER INPUTS
                   IF DOWN='1' AND YCENTER+50<520 then
                        Ycenter<=Ycenter+VELOCITY;
                   end if;
                   IF UP='1' AND YCENTER-50>41 then
                        Ycenter<=Ycenter-VELOCITY;
                   end if;
                   IF RIGHT='1' AND XCENTER+50<799 then
                        Xcenter<=Xcenter+VELOCITY;
                   end if;
                   IF LEFT='1' AND XCENTER-50>160 then
                        Xcenter<=Xcenter-VELOCITY;
                   end if;
           END IF;
        END IF;
    END IF;
  
-- THE VERTICAL SYNC AND HORIZANTAL SYNC ARE GENERATED BASED ON THIR PULSE WIDTH
    IF HPOS>15 AND HPOS<112 THEN
        HSYNC<='0';
    ELSE 
        HSYNC<='1';
    END IF;
    
    IF VPOS>9 AND VPOS<12 THEN
        VSYNC<='0';
        ELSE
        VSYNC<='1';
    END IF;
    
 --THE RGB OUTPUTS RECIEVE NOTHING IF OUTSIDE THE DISPLAY TIME
    IF (HPOS>0 AND HPOS<160) OR (VPOS>0 AND VPOS<41) THEN
        R<=(OTHERS=>'0');
        G<=(OTHERS=>'0');
        B<=(OTHERS=>'0');
        
    END IF;
         
 END IF;
END PROCESS;
end Behavioral;